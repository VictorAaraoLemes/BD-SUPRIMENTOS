CREATE DATABASE EE
USE EE

--- CRIANDO AS TABELAS

CREATE TABLE ESTOQUE(
ID_ESTOQUE INT NOT NULL PRIMARY KEY,
DESCRICAO VARCHAR(100),
TIPO VARCHAR(35),
CAPACIDADE INT,
QTD_ATUAL INT,
ESTA_CHEIO BIT
)

CREATE TABLE PRODUTOS(
ID_PRODUTO INT NOT NULL PRIMARY KEY,
DESCRICAO VARCHAR(100),
VALOR_UNITARIO_VENDA DECIMAL(7,2),
LOTE VARCHAR(15)
)

CREATE TABLE PRODUTO_ESTOQUE(
ID_PROD_EST INT NOT NULL PRIMARY KEY IDENTITY(1,1),
ID_ESTOQUE INT,
ID_PRODUTO INT,
QTD INT,
PRECO_MEDIO DECIMAL(7,2)
)

CREATE TABLE CLIENTE(
ID_CLIENTE INT NOT NULL PRIMARY KEY,
NOME VARCHAR(100),
NOME_FANTASIA VARCHAR(100),
CNPJ VARCHAR(100),
TELEFONE VARCHAR(30)
)

CREATE TABLE MOV_EST_ENTRADA(
ID_MOV_EST_ENTRADA INT NOT NULL PRIMARY KEY IDENTITY(1,1),
DESCRICAO VARCHAR(100),
ID_FORNECEDOR INT,
ID_PRODUTO INT,
QTD_ENTRADA INT,
PRECO_UNITARIO DECIMAL(7,2),
DT_ENTRADA DATETIME,
ID_ESTOQUE INT
)

CREATE TABLE MOV_EST_SAIDA(
ID_MOV_EST_SAIDA INT NOT NULL PRIMARY KEY IDENTITY(1,1),
DESCRICAO VARCHAR(150),
ID_ESTOQUE INT,
ID_PRODUTO INT,
ID_CLIENTE INT,
QTD_SAIDA INT,
DESCONTO FLOAT,
DT_SAIDA DATETIME
)

CREATE TABLE FORNECEDORES(
ID_FORNECEDOR INT NOT NULL PRIMARY KEY,
NOME VARCHAR(100),
NOME_FANTASIA VARCHAR(100),
CNPJ VARCHAR(100),
CEP VARCHAR(30),
TELEFONE VARCHAR(30)
)

--- ADICIONANDO A FOREING KEYS

ALTER TABLE PRODUTO_ESTOQUE
ADD CONSTRAINT FK_ESTOQUE FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE)

ALTER TABLE PRODUTO_ESTOQUE
ADD CONSTRAINT FK_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS (ID_PRODUTO)

ALTER TABLE MOV_EST_ENTRADA
ADD CONSTRAINT FK_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDORES (ID_FORNECEDOR)

ALTER TABLE MOV_EST_ENTRADA
ADD CONSTRAINT FK_PRODUTO_ENTRADA FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS (ID_PRODUTO)

ALTER TABLE MOV_EST_ENTRADA
ADD CONSTRAINT FK_ESTOQUE_ENTRADA FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE)

ALTER TABLE MOV_EST_SAIDA
ADD CONSTRAINT FK_ESTOQUE_SAIDA FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE)

ALTER TABLE MOV_EST_SAIDA
ADD CONSTRAINT FK_PRODUTO_SAIDA FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS (ID_PRODUTO)

ALTER TABLE MOV_EST_SAIDA
ADD CONSTRAINT FK_CLIENTE_SAIDA FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE)

-- FORNECEDORES MEDICAMENTOS
INSERT INTO FORNECEDORES(ID_FORNECEDOR, NOME, NOME_FANTASIA, CNPJ, CEP, TELEFONE)
VALUES
(1, 'NEO QUIMICA COMERCIAL DE ESPECIALIDADES QUIMICAS LTDA', 'NEO QUÍMICA', '05.552.150/0001-21', '08.295-005', '+55 (11) 3152-4099'),
(2, 'EUROFARMA LABORATORIOS S.A.', 'EUROFARMA LABORATORIOS', '61.190.096/0008-69', '06.696-000', '+55 (11) 5090-8600'),
(3, 'CIMED INDUSTRIA DE MEDICAMENTOS LTDA', 'CIMED', '02.814.497/0001-07', '01.550-000', '+55 (11) 3544-7200'),

-- FORNECEDORES ALMOXARIFADO
(4, 'GIMBA SUPRICORP SUPRIMENTOS LTDA', 'GIMBA', '54.651.716/0001-88', '04.205-000', '+55 (11) 2594-5127'),
(5, 'MIXPEL COMERCIO DE PAPELARIA E INFORMATICA EIRELI', 'MIXPEL INFORMATICA', '11.050.845/0001-08', '57.020-070', '+55 (82) 3344-1111'),
(6, 'PROCOMP INDUSTRIA ELETRONICA LTDA', 'PROCOMP', '54.083.035/0001-60', '05.347-010', '+55 (12) 3152-4407'),

-- FORNECEDORES OPME
(7, 'OPMENEXO', 'BIONEXO S.A.', '04.069.709/0001-02', '04.571-905', '+55 (11) 3133-8100'),
(8, 'CARDIOMED IMP E DISTR DE PRODUTOS', 'CARDIOMED', '22.052.653/0001-57', '71.938-180', '+55 (11) 3443-3984'),
(9, 'GYNMEDICAL DISTRIBUIDORA DE MATERIAIS MEDICO EIRELI', 'GYNMEDICAL', '30.994.528/0001-94', '74.835-370', '+55 (11) 2336-1133');

--- INSERT DE VARIAVEIS PARA ENCHER AS TABELAS

INSERT INTO ESTOQUE (ID_ESTOQUE, DESCRICAO, TIPO, CAPACIDADE,QTD_ATUAL)
VALUES 
(1, 'FARMACIA', 'SUB-ESTOQUE', 4000,0),
(2, 'ALMOXARIFADO', 'DISTRIBUIÇÃO', 4000,0),
(3, 'OPME', 'DISTRIBUIÇÃO', 4000,0);

--MATERIAL ESTOQUE ALMOXARIFADO
INSERT INTO PRODUTOS (ID_PRODUTO, DESCRICAO, VALOR_UNITARIO_VENDA, LOTE)
VALUES
(1, 'APAGADOR DE QUADRO BRANCO', 40, 'A12X'),
(2, 'BATERIA 9 VOLTS', 60, 'A12X'),
(3, 'PAPEL SULFITE A4 PCT 500 FOLHAS', 30, 'A13X'),
(4, 'PILHA GRANDE', 5, 'A13X'),
(5, 'REGUA 30 CM', 2, 'A12X'),
(6, 'SUPORTE DE CANETA', 6, 'A13X'),
(7, 'CANETA AZUL', 2, 'A13X'),
(8, 'CANETA PRETA', 2, 'A13X'),
(9, 'CARBONO A4 AZUL', 15, 'A12X'),
(10, 'CLIPS 3.0 CX DE 500 GR', 3, 'A13X'); 

 --PRODUTO ESTOQUE FARMACIA
INSERT INTO PRODUTOS (ID_PRODUTO, DESCRICAO, VALOR_UNITARIO_VENDA, LOTE)
VALUES
(11, 'NOVALGINA 50MG/ML-100ML', 41.50, 'M14Y'),
(12, 'PARACETAMOL 200MG/ML-15ML', 36, 'M14Y'),
(13, 'ALIVIUM 100MG/ML-20ML', 46.48, 'M15Y'),
(14, 'DORMIRE 15MG CP', 3.93, 'M15Y'),
(15, 'CIPRO 500MG CP', 2.58, 'M14Y'),
(16, 'LEVOTAC 5MG/ML-100ML', 227.04, 'M14Y'),
(17, 'ATROVENT 0,25MG/ML-20ML', 27.98, 'M15Y'),
(18, 'RINOSORO 9MG/ML GTS', 19.92, 'M15Y'),
(19, 'ATURGYL 0,5MG/ML-30ML', 17.15, 'M14Y'),
(20, 'ADRENALINA 1MG/ML-1ML', 2.26, 'M14Y'); 

--MATERIAL ESTOQUE OPME
INSERT INTO PRODUTOS (ID_PRODUTO, DESCRICAO, VALOR_UNITARIO_VENDA, LOTE)
VALUES
(21, 'GRAMPEADOR EEA31 DST 48 VERDE', 1805, 'O16Z'),
(22, 'TRI-20 CANULA PARA ESFINCTERETOMIA', 142.5, 'O17Z'),
(23, 'HBD-W-10-11-12 CATETER BALAO 8 FR', 1260.24, 'O16Z'),
(24, 'OACL 10-9 PROTESE BILIAR 10FR 9 CM', 2505.14, 'O17Z'),
(25, 'OACL 8.5-12 PROTESE BILIAR 8.5FR 12CM', 3042, 'O16Z'),
(26, 'KIT CANULA SIMPLE BLOCK 21G 100MM', 406.62, 'O17Z'),
(27, 'ROCASTONE BASKET NITINOL HELICAL 2.5 FRX120 CM', 2380.69, 'O17Z'),
(28, 'ELETRODO TURP BIPOLAR DE CORTE TIPO ALCA 24FR HASTE UNICA', 1492.57, 'O17Z'),
(29, 'EXCEL DILATING 11 MM', 3615.78, 'O16Z'),
(30, 'ADESIVO TOPICO DERMABOND', 117.36, 'O17Z');

-- INSERT CLIENTES
INSERT INTO CLIENTE (ID_CLIENTE,NOME,NOME_FANTASIA,CNPJ,TELEFONE) VALUES
(1, 'FERNANDO MARCELO', 'HOSPITAL ST. MEGA FREIRA', '30.994.528/0001-94','+55 (11) 2336-1133'),
(2, 'VITOR EMANUEL', 'HOSPITAL FREI GALVÃO', '30.994.528/0001-94','+55 (11) 2336-1133'),
(3, 'DANIEL LUCAS', 'HOSPITAL MARIA DA SERRA', '30.994.528/0001-94','+55 (11) 2336-1133');

--- CRIANDO A TRIGGER DE INSERCAO DE ENTRADA
GO
CREATE TRIGGER TGR_MOV_ENTRADA
ON MOV_EST_ENTRADA 
FOR INSERT
AS
BEGIN
	DECLARE 
	@ID_PRODUTO INT,
	@QTD INT,
	@ID_ESTOQUE INT
	SELECT @ID_PRODUTO = ID_PRODUTO, @QTD=QTD_ENTRADA, @ID_ESTOQUE = ID_ESTOQUE FROM INSERTED

	IF @QTD <= (SELECT CAPACIDADE-QTD_ATUAL FROM ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE)
	BEGIN
		IF (EXISTS(SELECT ID_PRODUTO FROM PRODUTO_ESTOQUE WHERE ID_PRODUTO=@ID_PRODUTO))
			BEGIN
			UPDATE ESTOQUE SET QTD_ATUAL = QTD_ATUAL+@QTD WHERE ID_ESTOQUE = @ID_ESTOQUE;
			UPDATE ESTOQUE SET ESTA_CHEIO= (CASE WHEN 
		(@QTD+(SELECT QTD_ATUAL FROM ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE)) = (SELECT CAPACIDADE FROM ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE)THEN 'TRUE' ELSE 'FALSE' END)
		WHERE ID_ESTOQUE = @ID_ESTOQUE;
			END	
	END
	ELSE
	BEGIN
		;THROW 50000 ,'CAPACIDADE MAXIMA ULTAPASSADA',1;
	END
END 

---TRIGGER DE INSERCAO SAIDA
GO
CREATE TRIGGER TGR_MOV_SAIDA
ON MOV_EST_SAIDA
FOR INSERT
AS
BEGIN
	DECLARE 
	@ID_PRODUTO INT,
	@QTD INT,
	@ID_ESTOQUE INT
	SELECT @ID_PRODUTO = ID_PRODUTO, @QTD=QTD_SAIDA, @ID_ESTOQUE = ID_ESTOQUE FROM INSERTED

	IF ((SELECT QTD FROM PRODUTO_ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE AND ID_PRODUTO=@ID_PRODUTO)-@QTD) >= 0 
	BEGIN
			UPDATE ESTOQUE SET QTD_ATUAL = QTD_ATUAL-@QTD WHERE ID_ESTOQUE = @ID_ESTOQUE;
			UPDATE ESTOQUE SET ESTA_CHEIO= 'FALSE' WHERE ID_ESTOQUE = @ID_ESTOQUE;
	END
	ELSE
	BEGIN
		;THROW 50000 ,'CAPACIDADE RETIRADA INSUFICIENTE',1;
	END
END 

--- CRIAR PROCEDURE DE INSERCAO DE ENTRADA

GO
CREATE PROCEDURE INS_ENTRADA (
	@ID_PRODUTO INT,
	@ID_FORNECEDOR INT,
	@QTD_ENTRADA INT,
	@ID_ESTOQUE INT,
	@PRECO_UNITARIO DECIMAL(7,2),
	@DT_ENTRADA DATETIME
) AS
BEGIN
	DECLARE @PRECO_MEDIO FLOAT;

		INSERT INTO MOV_EST_ENTRADA(DESCRICAO, ID_FORNECEDOR, ID_PRODUTO, QTD_ENTRADA, PRECO_UNITARIO, DT_ENTRADA,ID_ESTOQUE)
		VALUES ('ENTRADA PRODUTO', 
			@ID_FORNECEDOR, @ID_PRODUTO, @QTD_ENTRADA, 
			@PRECO_UNITARIO, @DT_ENTRADA,@ID_ESTOQUE);
			SET @PRECO_MEDIO=(SELECT AVG(PRECO_UNITARIO) FROM MOV_EST_ENTRADA WHERE ID_PRODUTO=@ID_PRODUTO);

		IF(EXISTS(SELECT ID_PRODUTO FROM PRODUTO_ESTOQUE WHERE ID_PRODUTO=@ID_PRODUTO AND ID_ESTOQUE = @ID_ESTOQUE))
		BEGIN
			UPDATE PRODUTO_ESTOQUE SET QTD=QTD+@QTD_ENTRADA, PRECO_MEDIO=@PRECO_MEDIO WHERE ID_PRODUTO=@ID_PRODUTO AND ID_ESTOQUE = @ID_ESTOQUE;
		END
		ELSE 
		BEGIN
		INSERT INTO PRODUTO_ESTOQUE (ID_ESTOQUE,ID_PRODUTO,QTD,PRECO_MEDIO) 
		VALUES (@ID_ESTOQUE,@ID_PRODUTO,@QTD_ENTRADA,@PRECO_MEDIO)
		UPDATE ESTOQUE SET QTD_ATUAL = (SELECT SUM(QTD) FROM PRODUTO_ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE) WHERE ID_ESTOQUE=@ID_ESTOQUE
		UPDATE ESTOQUE SET ESTA_CHEIO= (CASE WHEN 
		(@QTD_ENTRADA+(SELECT QTD_ATUAL FROM ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE)) = (SELECT CAPACIDADE FROM ESTOQUE WHERE ID_ESTOQUE=@ID_ESTOQUE)THEN 'TRUE' ELSE 'FALSE' END)
		END
		UPDATE PRODUTOS SET VALOR_UNITARIO_VENDA=@PRECO_MEDIO*1.35 WHERE ID_PRODUTO=@ID_PRODUTO
END

DECLARE @HOJE DATETIME
SET @HOJE = (SELECT GETDATE())
EXEC INS_ENTRADA @ID_PRODUTO=3,@ID_FORNECEDOR=4,@QTD_ENTRADA=100, @ID_ESTOQUE = 2,@PRECO_UNITARIO = 40 ,@DT_ENTRADA= @HOJE
EXEC INS_ENTRADA @ID_PRODUTO=2,@ID_FORNECEDOR=5,@QTD_ENTRADA=45, @ID_ESTOQUE = 2,@PRECO_UNITARIO = 54.5 ,@DT_ENTRADA= @HOJE
EXEC INS_ENTRADA @ID_PRODUTO=11,@ID_FORNECEDOR=1,@QTD_ENTRADA=105, @ID_ESTOQUE = 1,@PRECO_UNITARIO = 26 ,@DT_ENTRADA= @HOJE
EXEC INS_ENTRADA @ID_PRODUTO=12,@ID_FORNECEDOR=2,@QTD_ENTRADA=200, @ID_ESTOQUE = 1,@PRECO_UNITARIO = 20 ,@DT_ENTRADA= @HOJE
EXEC INS_ENTRADA @ID_PRODUTO=21,@ID_FORNECEDOR=2,@QTD_ENTRADA=22, @ID_ESTOQUE = 3,@PRECO_UNITARIO = 20 ,@DT_ENTRADA= @HOJE

select * from PRODUTO_ESTOQUE
select * from ESTOQUE
select * from MOV_EST_ENTRADA
---PROCEDURE DE INSERCAO DE SAIDA
GO
CREATE PROCEDURE INS_SAIDA (
	@ID_PRODUTO INT,
	@ID_CLIENTE INT,
	@QTD_SAIDA INT,
	@ID_ESTOQUE INT,
	@DESCONTO FLOAT,
	@DT_SAIDA DATETIME
) AS
BEGIN
		INSERT INTO MOV_EST_SAIDA(DESCRICAO, ID_ESTOQUE, ID_PRODUTO, ID_CLIENTE, QTD_SAIDA, DESCONTO,DT_SAIDA)
		VALUES ('SAIDA PRODUTO', @ID_ESTOQUE, @ID_PRODUTO,
		@ID_CLIENTE,@QTD_SAIDA, @DESCONTO,@DT_SAIDA);
			UPDATE PRODUTO_ESTOQUE SET QTD=QTD-@QTD_SAIDA WHERE ID_PRODUTO=@ID_PRODUTO AND ID_ESTOQUE = @ID_ESTOQUE;
END

DECLARE @HOJE DATETIME
SET @HOJE = (SELECT GETDATE())
EXEC INS_SAIDA @ID_PRODUTO = 1, @ID_CLIENTE = 1, @QTD_SAIDA = 5, @ID_ESTOQUE =2, @DESCONTO = 0.35, @DT_SAIDA =@HOJE
EXEC INS_SAIDA @ID_PRODUTO = 2, @ID_CLIENTE = 2, @QTD_SAIDA = 15, @ID_ESTOQUE =2, @DESCONTO = 0.4, @DT_SAIDA =@HOJE
EXEC INS_SAIDA @ID_PRODUTO = 11, @ID_CLIENTE = 3, @QTD_SAIDA = 4, @ID_ESTOQUE =1, @DESCONTO = 0.5, @DT_SAIDA =@HOJE
EXEC INS_SAIDA @ID_PRODUTO = 12, @ID_CLIENTE = 1, @QTD_SAIDA = 3, @ID_ESTOQUE =1, @DESCONTO = 0.6, @DT_SAIDA =@HOJE
EXEC INS_SAIDA @ID_PRODUTO = 21, @ID_CLIENTE = 2, @QTD_SAIDA = 21, @ID_ESTOQUE =3, @DESCONTO = 0.2, @DT_SAIDA =@HOJE


CREATE VIEW RASTREABILIDADE AS
SELECT M.DESCRICAO AS 'TIPO DE MOVIMENTAÇÃO',
       F.ID_FORNECEDOR,
       M.ID_PRODUTO,
       QTD_ENTRADA,
       M.PRECO_UNITARIO,
       E.ID_ESTOQUE AS 'ESTOQUE DE ENTRADA',
       DT_ENTRADA,
       MS.DESCRICAO AS 'TIPO DE MOVIMENTAÇÃO',
       MS.ID_PRODUTO AS 'PRODUTO DE SAIDA',
       MS.QTD_SAIDA,
       MS.DESCONTO,
       MS.ID_CLIENTE,
       MS.DT_SAIDA
FROM MOV_EST_ENTRADA M
INNER JOIN MOV_EST_SAIDA MS ON MS.ID_PRODUTO = M.ID_PRODUTO
INNER JOIN PRODUTOS P ON P.ID_PRODUTO = M.ID_PRODUTO
INNER JOIN FORNECEDORES F ON F.ID_FORNECEDOR = M.ID_FORNECEDOR
INNER JOIN ESTOQUE E ON E.ID_ESTOQUE=M.ID_ESTOQUE 


CREATE VIEW CONSULTA_ESTOQUE AS
SELECT P.ID_PRODUTO,
	   P.DESCRICAO AS 'NOME PRODUTO',
	   E.ID_ESTOQUE,
	   PE.QTD,
	   P.VALOR_UNITARIO_VENDA,
	   P.LOTE,
	   E.DESCRICAO AS 'TIPO ESTOQUE'
FROM PRODUTO_ESTOQUE PE
INNER JOIN PRODUTOS P ON P.ID_PRODUTO = PE.ID_PRODUTO
INNER JOIN ESTOQUE E ON E.ID_ESTOQUE = PE.ID_ESTOQUE



SELECT DISTINCT ME.DESCRICAO AS 'TIPO DE MOVIMENTAÇÃO',
       ME.ID_PRODUTO AS 'ID_PRODUTO',
       P.DESCRICAO,
       ME.QTD_ENTRADA,
       ME.PRECO_UNITARIO AS 'VALOR UNITARIO',    
	   ME.ID_FORNECEDOR,
       F.NOME_FANTASIA AS 'FORNECEDOR',
       ME.DT_ENTRADA
FROM MOV_EST_ENTRADA ME
INNER JOIN PRODUTOS P ON P.ID_PRODUTO = ME.ID_PRODUTO
INNER JOIN FORNECEDORES F ON F.ID_FORNECEDOR = ME.ID_FORNECEDOR
INNER JOIN ESTOQUE E ON E.ID_ESTOQUE=ME.ID_ESTOQUE

SELECT DISTINCT MS.DESCRICAO AS 'TIPO DE MOVIMENTAÇÃO',
       MS.ID_PRODUTO AS 'ID_PRODUTO VENDIDO',
       P.DESCRICAO,
       MS.QTD_SAIDA AS 'QTD VENDIDA',
       ((P.VALOR_UNITARIO_VENDA*MS.QTD_SAIDA)*(1-MS.DESCONTO)) AS 'VALOR PAGO',    
	   ME.ID_FORNECEDOR,
       MS.ID_CLIENTE,
       CL.NOME AS 'CLIENTE',
       MS.DT_SAIDA
FROM MOV_EST_SAIDA MS
INNER JOIN PRODUTOS P ON P.ID_PRODUTO = MS.ID_PRODUTO
INNER JOIN CLIENTE CL ON CL.ID_CLIENTE = MS.ID_CLIENTE
INNER JOIN ESTOQUE E ON E.ID_ESTOQUE=MS.ID_ESTOQUE
INNER JOIN MOV_EST_ENTRADA ME ON ME.ID_ESTOQUE= MS.ID_ESTOQUE